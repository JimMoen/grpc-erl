name: Run test cases

on: [push, pull_request]

jobs:

  windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
    - uses: erlef/setup-beam@v1
      with:
        otp-version: '24'
        rebar3-version: '3.16.1'
    - run: rebar3 xref
    - run: rebar3 dialyzer
    - run: rebar3 eunit
    - run: rebar3 ct

  linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os:
          - ubuntu20.04
          - ubuntu18.04
          - ubuntu16.04
          - debian10
          - debian9
          - centos8
          - centos7
          - raspbian10

    steps:
    - uses: actions/checkout@v1
    - name: Code analyze
      env:
        ERL_OTP: erl24.3.4.2-1
        SYSTEM: ${{ matrix.os }}
      run: |
        version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
        sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
        sudo docker run --rm -i --name $SYSTEM -v $(pwd):/repos emqx/build-env:$ERL_OTP-$SYSTEM sh -c "cd /repos && make xref && make dialyzer"
    - name: Run tests
      env:
        ERL_OTP: erl24.3.4.2-1
        SYSTEM: ${{ matrix.os }}
      run: |
        version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
        sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
        sudo docker run --rm -i --name $SYSTEM -v $(pwd):/repos emqx/build-env:$ERL_OTP-$SYSTEM sh -c "cd /repos && make eunit && make ct"

  docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Code analyze
      env:
        ERL_OTP: erl24.3.4.2-1
      run: docker run --rm -i --name alpine -v $(pwd):/repos emqx/build-env:$ERL_OTP-alpine sh -c "cd /repos && make xref && make dialyzer"
    - name: Run tests
      env:
        ERL_OTP: erl24.3.4.2-1
      run: docker run --rm -i --name alpine -v $(pwd):/repos emqx/build-env:$ERL_OTP-alpine sh -c "cd /repos && make eunit && make ct"

